{"ast":null,"code":"var _jsxFileName = \"/home/stude/weather-podcast/src/weather/index.js\";\nimport { useweather } from \"../Hooks/Userweatherget\";\nimport userweather from \"../Atom/userweather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weather = () => {\n  const {\n    weather,\n    error,\n    loading\n  } = useweather();\n  console.log(weather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 19\n    }, this), error.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }, this), weather.length > 0 ? weather.map(weather => /*#__PURE__*/_jsxDEV(\"userweather\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n    // <userweather\n    //   key={weather.id}\n    //   currentweather={weather.currentweather}\n    //   timezone={weather.timezone}\n    // />\n    ) : loading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"no not known\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\nexport default weather;","map":{"version":3,"names":["useweather","userweather","jsxDEV","_jsxDEV","weather","error","loading","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map"],"sources":["/home/stude/weather-podcast/src/weather/index.js"],"sourcesContent":["import { useweather } from \"../Hooks/Userweatherget\";\nimport userweather from \"../Atom/userweather\";\n\nconst weather = () => {\n  const { weather, error, loading } = useweather();\n  console.log(weather);\n  return (\n    <div>\n      {loading && <h2>loading weather...</h2>}\n      {error.length > 0 && <h2>{error}</h2>}\n      {weather.length > 0\n        ? weather.map((weather) => (\n            <userweather\n            \n            />\n            // <userweather\n            //   key={weather.id}\n            //   currentweather={weather.currentweather}\n            //   timezone={weather.timezone}\n            // />\n          ))\n        : loading && <h2>no not known</h2>}\n    </div>\n  );\n};\nexport default weather;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAM;IAAEA,OAAO;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGN,UAAU,CAAC,CAAC;EAChDO,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;EACpB,oBACED,OAAA;IAAAM,QAAA,GACGH,OAAO,iBAAIH,OAAA;MAAAM,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtCR,KAAK,CAACS,MAAM,GAAG,CAAC,iBAAIX,OAAA;MAAAM,QAAA,EAAKJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACpCT,OAAO,CAACU,MAAM,GAAG,CAAC,GACfV,OAAO,CAACW,GAAG,CAAEX,OAAO,iBAClBD,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;IACD;IACA;IACA;IACA;IACA;IACD,CAAC,GACFP,OAAO,iBAAIH,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AACD,eAAeT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}