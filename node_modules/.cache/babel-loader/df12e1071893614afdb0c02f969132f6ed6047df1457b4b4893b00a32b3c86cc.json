{"ast":null,"code":"// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;","map":{"version":3,"names":[],"sources":["/home/stude/weather-podcast/src/Weather/index.js"],"sourcesContent":["// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}