{"ast":null,"code":"var _s = $RefreshSig$();\nimport './index.css';\nimport React, { useState } from 'react';\nconst weather = () => {\n  _s();\n  const [county, setCounty] = useState('');\n};\n\n// const Weather = () => {\n//   const [city, setCity] = useState('');\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const handleInputChange = (event) => {\n//     setCity(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       setError(null);\n//     } catch (error) {\n//       setError('Error fetching weather data. Please try again.');\n//     }\n//   };\n//   return (\n//     <div className='contain'>\n//       <h1 className='weath'>Weather App</h1>\n//       <div className='container'>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter a city\"\n//           value={city}\n//           onChange={handleInputChange}\n//           className='cite'/>\n//         <button type=\"submit\" className='button'>Get Weather</button>\n//       </form>\n//             {/* <img src={clouds} alt=\"clouds\" className=\"image\" /> */}\n//       {error && <p>{error}</p>}\n//       {weatherData && (\n//         <div className='data'>\n//           <h2>{weatherData.name}</h2>\n//           <p>Temperature: {weatherData.main.temp}°C</p>\n//           <p>Description: {weatherData.weather[0].description}</p>\n//           <p>Humidity: {weatherData.main.humidity}%</p>\n//           <p>Wind Speed: {weatherData.wind.speed} m/s</p>\n//         </div>\n//       )}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Weather;\n_s(weather, \"1MS1/iQqleUccSNVyc9Rj0hJtnM=\");","map":{"version":3,"names":["React","useState","weather","_s","county","setCounty"],"sources":["/home/stude/weather-podcast/src/weather/index.js"],"sourcesContent":["import './index.css'\nimport React, { useState } from 'react';\n\nconst weather =() =>{\n\n  const [county,setCounty]= useState('')\n}\n\n\n\n\n\n// const Weather = () => {\n//   const [city, setCity] = useState('');\n//   const [weatherData, setWeatherData] = useState(null);\n//   const [error, setError] = useState(null);\n//   const handleInputChange = (event) => {\n//     setCity(event.target.value);\n//   };\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       setError(null);\n//     } catch (error) {\n//       setError('Error fetching weather data. Please try again.');\n//     }\n//   };\n//   return (\n//     <div className='contain'>\n//       <h1 className='weath'>Weather App</h1>\n//       <div className='container'>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter a city\"\n//           value={city}\n//           onChange={handleInputChange}\n//           className='cite'/>\n//         <button type=\"submit\" className='button'>Get Weather</button>\n//       </form>\n//             {/* <img src={clouds} alt=\"clouds\" className=\"image\" /> */}\n//       {error && <p>{error}</p>}\n//       {weatherData && (\n//         <div className='data'>\n//           <h2>{weatherData.name}</h2>\n//           <p>Temperature: {weatherData.main.temp}°C</p>\n//           <p>Description: {weatherData.weather[0].description}</p>\n//           <p>Humidity: {weatherData.main.humidity}%</p>\n//           <p>Wind Speed: {weatherData.wind.speed} m/s</p>\n//         </div>\n//       )}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Weather;\n\n\n\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,OAAO,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAElB,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAAEJ,QAAQ,CAAC,EAAE,CAAC;AACxC,CAAC;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,CApDMD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}