{"ast":null,"code":"var _jsxFileName = \"/home/stude/weather-podcast/src/Weather/index.js\";\n// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;\n\n// // Weather/index.jsx\n// import { UseWeather } from \"./Hooks/UserWeatherGet\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { Weather, loading, errors } = UseWeather();\n\n//   if (loading) return <h2>Loading weather...</h2>;\n//   if (errors) return <h2>{errors}</h2>;\n\n//   return (\n//     <div>\n//       {Weather && Weather.users ? (\n//         <WeatherCard\n//           currentWeather={Weather.users.current.temp_c}\n//           timezone={Weather.users.location.tz_id}\n//         />\n//       ) : (\n//         <h2>No weather data available</h2>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Weather;\n\nimport { UseWeather } from \"../Hooks/UserWeatherGet\";\nimport WeatherCard from \"../Atom/UserWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  const {\n    weather,\n    loading,\n    errors\n  } = UseWeather();\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading weather...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (errors) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: errors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather ? /*#__PURE__*/_jsxDEV(WeatherCard, {\n      currentWeather: weather.current.temp_c,\n      timezone: weather.location.tz_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No weather data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["UseWeather","WeatherCard","jsxDEV","_jsxDEV","Weather","weather","loading","errors","children","fileName","_jsxFileName","lineNumber","columnNumber","currentWeather","current","temp_c","timezone","location","tz_id","_c","$RefreshReg$"],"sources":["/home/stude/weather-podcast/src/Weather/index.js"],"sourcesContent":["// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;\n\n// // Weather/index.jsx\n// import { UseWeather } from \"./Hooks/UserWeatherGet\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { Weather, loading, errors } = UseWeather();\n\n//   if (loading) return <h2>Loading weather...</h2>;\n//   if (errors) return <h2>{errors}</h2>;\n\n//   return (\n//     <div>\n//       {Weather && Weather.users ? (\n//         <WeatherCard\n//           currentWeather={Weather.users.current.temp_c}\n//           timezone={Weather.users.location.tz_id}\n//         />\n//       ) : (\n//         <h2>No weather data available</h2>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Weather;\n\n\n\n\n\n\n\nimport { UseWeather } from \"../Hooks/UserWeatherGet\";\nimport WeatherCard from \"../Atom/UserWeather\";\n\nconst Weather = () => {\n  const { weather, loading, errors } = UseWeather();\n\n  if (loading) return <h2>Loading weather...</h2>;\n  if (errors) return <h2>{errors}</h2>;\n\n  return (\n    <div>\n      {weather ? (\n        <WeatherCard\n          currentWeather={weather.current.temp_c}\n          timezone={weather.location.tz_id}\n        />\n      ) : (\n        <h2>No weather data available</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA,SAASA,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGP,UAAU,CAAC,CAAC;EAEjD,IAAIM,OAAO,EAAE,oBAAOH,OAAA;IAAAK,QAAA,EAAI;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAC/C,IAAIL,MAAM,EAAE,oBAAOJ,OAAA;IAAAK,QAAA,EAAKD;EAAM;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEpC,oBACET,OAAA;IAAAK,QAAA,EACGH,OAAO,gBACNF,OAAA,CAACF,WAAW;MACVY,cAAc,EAAER,OAAO,CAACS,OAAO,CAACC,MAAO;MACvCC,QAAQ,EAAEX,OAAO,CAACY,QAAQ,CAACC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,gBAEFT,OAAA;MAAAK,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACO,EAAA,GAlBIf,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}