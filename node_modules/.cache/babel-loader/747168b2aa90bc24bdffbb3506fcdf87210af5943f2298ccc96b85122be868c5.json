{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { getWeather } from \"../Utill\";\n\n// export const UseWeather = () => {\n//   const [Weather, setWeather] = useState([]);\n//   const [errors, setErrors] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       try {\n//         setLoading(true);\n//         const response = await getWeather();\n//         setWeather(response.users);\n//         setLoading(false);\n//       } catch (error) {\n//         setWeather(false);\n//         setErrors(`Error:${error.message}`);\n//       }\n//     };\n//     fetchWeather();\n//   }, []);\n//   return { Weather, loading, errors };\n// };","map":{"version":3,"names":[],"sources":["/home/stude/weather-podcast/src/Weather/Hooks/UserWeatherGet.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import { getWeather } from \"../Utill\";\n\n// export const UseWeather = () => {\n//   const [Weather, setWeather] = useState([]);\n//   const [errors, setErrors] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   useEffect(() => {\n//     const fetchWeather = async () => {\n//       try {\n//         setLoading(true);\n//         const response = await getWeather();\n//         setWeather(response.users);\n//         setLoading(false);\n//       } catch (error) {\n//         setWeather(false);\n//         setErrors(`Error:${error.message}`);\n//       }\n//     };\n//     fetchWeather();\n//   }, []);\n//   return { Weather, loading, errors };\n// };\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}