{"ast":null,"code":"// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;\n\n// // Weather/index.jsx\n// import { UseWeather } from \"./Hooks/UserWeatherGet\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { Weather, loading, errors } = UseWeather();\n\n//   if (loading) return <h2>Loading weather...</h2>;\n//   if (errors) return <h2>{errors}</h2>;\n\n//   return (\n//     <div>\n//       {Weather && Weather.users ? (\n//         <WeatherCard\n//           currentWeather={Weather.users.current.temp_c}\n//           timezone={Weather.users.location.tz_id}\n//         />\n//       ) : (\n//         <h2>No weather data available</h2>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Weather;","map":{"version":3,"names":[],"sources":["/home/stude/weather-podcast/src/Weather/index.js"],"sourcesContent":["// import { UseWeather} from \"../Hooks/Userweatherget\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { weather, error, loading } = UseWeather();\n// //   console.log(weather);\n//   return (\n//     <div>\n//       {loading && <h2>loading weather...</h2>}\n//       {error.length > 0 && <h2>{error}</h2>}\n//       {weather.length > 0\n//         ? weather.map((weather) => (\n//             <WeatherCard\n//             key={weather.id}\n//               currentweather={weather.currentweather}\n//               timezone={weather.timezone}\n//             />\n//             // <userweather\n//             //   key={weather.id}\n//             //   currentweather={weather.currentweather}\n//             //   timezone={weather.timezone}\n//             // />\n//           ))\n//         : loading && <h2>no not known</h2>}\n//     </div>\n//   );\n// };\n// export default Weather;\n\n// // Weather/index.jsx\n// import { UseWeather } from \"./Hooks/UserWeatherGet\";\n// import WeatherCard from \"../Atom/userweather\";\n\n// const Weather = () => {\n//   const { Weather, loading, errors } = UseWeather();\n\n//   if (loading) return <h2>Loading weather...</h2>;\n//   if (errors) return <h2>{errors}</h2>;\n\n//   return (\n//     <div>\n//       {Weather && Weather.users ? (\n//         <WeatherCard\n//           currentWeather={Weather.users.current.temp_c}\n//           timezone={Weather.users.location.tz_id}\n//         />\n//       ) : (\n//         <h2>No weather data available</h2>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Weather;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}