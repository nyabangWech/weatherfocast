{"ast":null,"code":"// const baseurl = process.env.REACT_APP_BASE_URL;\n\n// async function response(response) {\n//     if(!response.ok){\n//         throw new Error(`ffrhw: ${response.status}`)\n//     }\n//     return await response.json();\n// }\n\n// export const getWeather = () =>{\n//     fetch(`${baseurl}/weather`).then(response)\n// }\n\n// utils/weatherApi.js\n\n// const baseUrl = process.env.REACT_APP_BASE_URL;\n// const apiKey = process.env.REACT_APP_API_KEY;\n\n// async function handleResponse(response) {\n//     if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n//     return await response.json();\n// }\n\n// export const getWeather = (location = 'London') => {\n//     return fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`)\n//         .then(handleResponse);\n// };\n\n// // export const getForecast = (location = 'London', days = 3) => {\n// //     return fetch(`${baseUrl}/forecast.json?key=${apiKey}&q=${location}&days=${days}`)\n// //         .then(handleResponse);\n// // };\n\nconst baseUrl = process.env.REACT_APP_BASE_URL;\nconst apiKey = process.env.REACT_APP_API_KEY;\nasync function handleResponse(response) {\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  return await response.json();\n}\nexport const getWeather = (location = 'London') => {\n  return fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`).then(handleResponse);\n};\nasync function fetchData(baseUrl, apiKey, location) {\n  try {\n    const response = await fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`);\n\n    // Check if the response is ok (status in the range 200-299)\n    if (!response.ok) {\n      throw new Error(`HTTP error status: ${response.status}`);\n    }\n\n    // Parse the JSON response body\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    throw error; // Rethrow the error to be handled by the caller\n  }\n}","map":{"version":3,"names":["baseUrl","process","env","REACT_APP_BASE_URL","apiKey","REACT_APP_API_KEY","handleResponse","response","ok","Error","status","json","getWeather","location","fetch","then","fetchData","data","error","console"],"sources":["/home/stude/weather-podcast/src/Weather/utill.js"],"sourcesContent":["\n\n\n// const baseurl = process.env.REACT_APP_BASE_URL;\n\n// async function response(response) {\n//     if(!response.ok){\n//         throw new Error(`ffrhw: ${response.status}`)\n//     }\n//     return await response.json();\n// }\n\n// export const getWeather = () =>{\n//     fetch(`${baseurl}/weather`).then(response)\n// }\n\n\n\n// utils/weatherApi.js\n\n// const baseUrl = process.env.REACT_APP_BASE_URL;\n// const apiKey = process.env.REACT_APP_API_KEY;\n\n// async function handleResponse(response) {\n//     if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n//     return await response.json();\n// }\n\n// export const getWeather = (location = 'London') => {\n//     return fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`)\n//         .then(handleResponse);\n// };\n\n// // export const getForecast = (location = 'London', days = 3) => {\n// //     return fetch(`${baseUrl}/forecast.json?key=${apiKey}&q=${location}&days=${days}`)\n// //         .then(handleResponse);\n// // };\n\n\n\n\n\n\n\nconst baseUrl = process.env.REACT_APP_BASE_URL;\nconst apiKey = process.env.REACT_APP_API_KEY;\nasync function handleResponse(response) {\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json();\n}\nexport const getWeather = (location = 'London') => {\n    return fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`)\n        .then(handleResponse);\n};\n\n\n\n\nasync function fetchData(baseUrl, apiKey, location) {\n    try {\n      const response = await fetch(`${baseUrl}/current.json?key=${apiKey}&q=${location}`);\n      \n      // Check if the response is ok (status in the range 200-299)\n      if (!response.ok) {\n        throw new Error(`HTTP error status: ${response.status}`);\n      }\n      \n      // Parse the JSON response body\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('There was a problem with the fetch operation:', error);\n      throw error; // Rethrow the error to be handled by the caller\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAQA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAC9C,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;AAC5C,eAAeC,cAAcA,CAACC,QAAQ,EAAE;EACpC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;EAC7D;EACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;AAChC;AACA,OAAO,MAAMC,UAAU,GAAGA,CAACC,QAAQ,GAAG,QAAQ,KAAK;EAC/C,OAAOC,KAAK,CAAC,GAAGd,OAAO,qBAAqBI,MAAM,MAAMS,QAAQ,EAAE,CAAC,CAC9DE,IAAI,CAACT,cAAc,CAAC;AAC7B,CAAC;AAKD,eAAeU,SAASA,CAAChB,OAAO,EAAEI,MAAM,EAAES,QAAQ,EAAE;EAChD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGd,OAAO,qBAAqBI,MAAM,MAAMS,QAAQ,EAAE,CAAC;;IAEnF;IACA,IAAI,CAACN,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsBF,QAAQ,CAACG,MAAM,EAAE,CAAC;IAC1D;;IAEA;IACA,MAAMO,IAAI,GAAG,MAAMV,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,OAAOM,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACrE,MAAMA,KAAK,CAAC,CAAC;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}